server.port=8080

# ===============================
# Application Mode
# ===============================
#audit.handler-type=database
audit.handler-type=kafka_database

#audit.handler.type=kafka_database

############################LOG CONFIGURATION##################
logging.level.root=INFO
logging.level.com.ridhitek.audit=DEBUG

logging.level.org.apache.kafka=INFO
logging.level.org.springframework.kafka=DEBUG

logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.SQL=INFO

# ===============================
# Database Configuration (MySQL)
# ===============================
audit.datasource.url=jdbc:mysql://localhost:3306/audit_logs
audit.datasource.username=${DB_USERNAME}  # Use environment variable for username
audit.datasource.password=${DB_PASSWORD}  # Use environment variable for password
audit.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate settings
audit.datasource.jpa.hibernate.ddl-auto=update
audit.datasource.jpa.show-sql=true
audit.datasource.jpa.properties.hibernate.format_sql=true
audit.datasource.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# Enable second-level caching
hibernate.cache.use_second_level_cache=true
hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory

# Connection Pooling Configuration
audit.datasource.hikari.maximum-pool-size=10
audit.datasource.hikari.minimum-idle=5
audit.datasource.hikari.idle-timeout=30000
audit.datasource.hikari.max-lifetime=1800000
audit.datasource.hikari.connection-timeout=30000

# ===============================
# Kafka Configuration (Only Used if kafka_database Mode is Enabled)
# ===============================
# Kafka Broker
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}  # Use environment variable
spring.kafka.security.protocol=SSL
spring.kafka.ssl.truststore.location=/path/to/truststore.jks
spring.kafka.ssl.truststore.password=${TRUSTSTORE_PASSWORD}  # Use environment variable
spring.kafka.ssl.keystore.location=/path/to/keystore.jks
spring.kafka.ssl.keystore.password=${KEYSTORE_PASSWORD}  # Use environment variable
spring.kafka.ssl.key.password=${KEY_PASSWORD}  # Use environment variable

# Consumer Config
spring.kafka.topic=audit_topic_test
spring.kafka.consumer.group-id=new_audit_log_group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.max-poll-records=10
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Producer Config
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

resilience4j.circuitbreaker.instances.auditLogProducer.register-health-indicator=true
resilience4j.circuitbreaker.instances.auditLogProducer.sliding-window-size=10
resilience4j.circuitbreaker.instances.auditLogProducer.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.auditLogProducer.wait-duration-in-open-state=10000
resilience4j.circuitbreaker.instances.auditLogProducer.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.auditLogProducer.minimum-number-of-calls=5

# Retry Mechanism
retry.maxAttempts=3
retry.backoff.delay=2000

spring.sql.init.mode=never
